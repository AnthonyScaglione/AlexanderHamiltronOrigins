namespace = dw_event

country_event = {
    id = dw_event.1
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_origin = origin_dyson_world
    }

    immediate = {
        start_situation = {
            type = dw_situation_restore_world
            target = root
        }
        set_country_flag = restoring_dyson_world
        root.capital_scope = {
			add_deposit = dw_makeshift_life_support
		}
        add_resource = {
			energy = 200
			minerals = 100
			food = 200
		}
    }
}

situation_event = {
    id = dw_event.2
    title = dw_event.2.name
    desc = dw_event.2.desc
    picture = GFX_evt_announcement
    show_sound = event_celebration
    is_triggered_only = yes

    trigger = {
        target = {
            has_origin = origin_dyson_world
        }
    }

    immediate = {
        target = {
            random_planet_within_border = {
                limit = {
                    has_planet_flag = is_dyson_world
                    is_planet_class = pc_ruined_dyson_panel
                }
                remove_modifier = dw_total_disrepair
                change_pc = pc_dyson_panel
                set_name = "NAME_dyson_panel"
                solar_system = {
                    while = {
                        count = 15
                        random_system_ambient_object = {
							limit = {
                                OR = {
                                    is_ambient_object_type = large_debris_object
                                    is_ambient_object_type = medium_debris_01_object
                                    is_ambient_object_type = medium_debris_02_object
                                    is_ambient_object_type = small_debris_object
                                }
                            }
                            destroy_ambient_object = this
						}
                    }
                }
            }
        }
    }

    option = {
 		name = dw_event.2.a
 	}
}

planet_event = {
    id = dw_event.3
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        exists = space_owner
        space_owner = {
            has_origin = origin_dyson_world
        }
    }

    immediate = {
        set_variable = {
            which = planet_size_progress
            value = trigger:planet_size
        }

        multiply_variable = {
            which = planet_size_progress
            value = 0.5
        }

        space_owner = {
            random_situation = {
                limit = {
                    is_situation_type = dw_situation_restore_world
                }
                add_situation_progress = prevprev.planet_size_progress
            }
        }
        
        every_owned_pop = {
			kill_pop = yes
		}

        destroy_colony = yes
		change_pc = pc_shattered
		reset_planet = yes
		hidden_effect = { clear_deposits = yes }
        add_deposit = d_minerals_5
        add_deposit = d_alloys_3
		add_deposit = d_energy_2
    }
}

planet_event = {
    id = dw_event.4
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        owner = { has_origin = origin_dyson_world }
    }
    immediate = {
        generate_start_deposits_and_blockers = yes
        generate_dw_start_buildings_and_districts = yes # replace this effect call with one to your effect that sets up buildings/districts
        generate_start_pops = yes # this is a custom effect, you can reuse the relevant built-in one "generate_start_pops"
        generate_home_planet_final_pass = yes
    }
}

country_event = {
    id = dw_event.5
    title = dw_event.5.name
    desc = dw_event.5.desc
    picture = GFX_evt_crisis_defeated
    show_sound = event_celebration
    is_triggered_only = yes
    trigger = {
        owner = { has_origin = origin_dyson_world }
    }
    option = {
 		name = dw_event.5.a
 	}
}
